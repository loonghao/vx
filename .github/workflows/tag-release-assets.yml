name: Release

# This workflow handles binary releases and distribution
# - Triggered by tag pushes (v*) or release events
# - Builds cross-platform binaries and uploads to GitHub releases
# - Uses houseabsolute/actions-rust-release for simplified release management
#
# Note: Crates.io publishing is handled by release-plz.yml workflow

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write
  actions: read
  id-token: write

env:
  CARGO_TERM_COLOR: always

jobs:
  release:
    name: Release - ${{ matrix.platform.os_name }}
    strategy:
      matrix:
        platform:
          # Linux platforms
          - os_name: Linux-x86_64
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu

          - os_name: Linux-x86_64-musl
            os: ubuntu-latest
            target: x86_64-unknown-linux-musl

          - os_name: Linux-aarch64
            os: ubuntu-latest
            target: aarch64-unknown-linux-gnu

          - os_name: Linux-aarch64-musl
            os: ubuntu-latest
            target: aarch64-unknown-linux-musl

          # Windows platforms
          - os_name: Windows-x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc

          - os_name: Windows-aarch64
            os: windows-latest
            target: aarch64-pc-windows-msvc

          # macOS platforms
          - os_name: macOS-x86_64
            os: macos-latest
            target: x86_64-apple-darwin

          - os_name: macOS-aarch64
            os: macos-latest
            target: aarch64-apple-darwin

          # FreeBSD platform (cross-compiled from Linux)
          - os_name: FreeBSD-x86_64
            os: ubuntu-latest
            target: x86_64-unknown-freebsd

    runs-on: ${{ matrix.platform.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Extract changelog for current version
      - name: Get version from tag
        id: tag_name
        run: |
          echo "current_version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        shell: bash

      - name: Get Changelog Entry
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v2
        with:
          validation_level: warn
          version: ${{ steps.tag_name.outputs.current_version }}
          path: ./CHANGELOG.md



      # Install cross-compilation dependencies for ARM64 targets
      - name: Install cross-compilation dependencies
        if: contains(matrix.platform.target, 'aarch64') && matrix.platform.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      # Install musl tools for musl targets
      - name: Install musl tools
        if: contains(matrix.platform.target, 'musl') && matrix.platform.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools

      - name: Build executable
        uses: houseabsolute/actions-rust-cross@v1
        with:
          command: build
          target: ${{ matrix.platform.target }}
          args: "--locked --release --bin vx"
          strip: true

      # Code signing for Windows executables using SignPath.io
      - name: Sign Windows executable
        if: contains(matrix.platform.target, 'windows')
        uses: signpath/github-action-submit-signing-request@v1
        with:
          api-token: ${{ secrets.SIGNPATH_API_TOKEN }}
          organization-id: ${{ secrets.SIGNPATH_ORGANIZATION_ID }}
          project-slug: 'vx'
          signing-policy-slug: 'release-signing'
          github-artifact-id: ${{ steps.build.outputs.artifact-id }}
          wait-for-completion: true
          output-artifact-directory: 'signed-artifacts'

      - name: Publish artifacts and release
        uses: houseabsolute/actions-rust-release@v0
        with:
          executable-name: vx
          target: ${{ matrix.platform.target }}
          changes-file: ""  # Disable default changelog file
          action-gh-release-parameters: |
            {
              "body": "${{ steps.changelog_reader.outputs.changes }}",
              "prerelease": ${{ steps.changelog_reader.outputs.status == 'prereleased' }},
              "draft": ${{ steps.changelog_reader.outputs.status == 'unreleased' }}
            }
          extra-files: |
            README.md
            README_zh.md
            LICENSE


