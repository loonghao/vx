name: Release

# This workflow handles binary releases and distribution
# - Triggered by main package tag pushes (v1.2.3 format) or manual dispatch
# - Builds cross-platform binaries and uploads to GitHub releases
# - Uses houseabsolute/actions-rust-release for simplified release management
# - Only processes main vx package tags, not individual crate tags (vx-tool-*, vx-core-*, etc.)
#
# Note: Crates.io publishing is handled by release-plz.yml workflow

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'  # Only match main package tags like v1.2.3, v1.2.3-rc1, etc.
  workflow_dispatch:

permissions:
  contents: write
  actions: read
  id-token: write

env:
  CARGO_TERM_COLOR: always

jobs:
  release:
    name: Release - ${{ matrix.platform.os_name }}
    strategy:
      matrix:
        platform:
          # Linux platforms
          - os_name: Linux-x86_64
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu

          - os_name: Linux-x86_64-musl
            os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            use_docker: true

          - os_name: Linux-aarch64
            os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            use_docker: true

          - os_name: Linux-aarch64-musl
            os: ubuntu-latest
            target: aarch64-unknown-linux-musl
            use_docker: true

          # Windows platforms
          - os_name: Windows-x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc

          - os_name: Windows-aarch64
            os: windows-latest
            target: aarch64-pc-windows-msvc

          # macOS platforms
          - os_name: macOS-x86_64
            os: macos-latest
            target: x86_64-apple-darwin

          - os_name: macOS-aarch64
            os: macos-latest
            target: aarch64-apple-darwin

          # FreeBSD platform (cross-compiled from Linux)
          - os_name: FreeBSD-x86_64
            os: ubuntu-latest
            target: x86_64-unknown-freebsd

    runs-on: ${{ matrix.platform.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Extract changelog for current version
      - name: Get version from tag
        id: tag_name
        run: |
          echo "current_version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        shell: bash

      - name: Get Changelog Entry
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v2
        with:
          validation_level: warn
          version: ${{ steps.tag_name.outputs.current_version }}
          path: ./CHANGELOG.md



      # Set up QEMU for ARM64 emulation
      - name: Set up QEMU
        if: matrix.platform.use_docker == true
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      # Set up Docker Buildx for multi-platform builds
      - name: Set up Docker Buildx
        if: matrix.platform.use_docker == true
        uses: docker/setup-buildx-action@v3

      # Build executable in Docker container (ARM64 or musl)
      - name: Build executable in Docker container
        if: matrix.platform.use_docker == true
        run: |
          # Determine platform and image based on target
          if [[ "${{ matrix.platform.target }}" == "aarch64-unknown-linux-gnu" ]]; then
            PLATFORM="linux/arm64"
            IMAGE="rust:1.82-slim"
            DEPS="pkg-config libssl-dev libssl3 build-essential"
            TARGET_FLAG="--target aarch64-unknown-linux-gnu"
          elif [[ "${{ matrix.platform.target }}" == *"musl"* ]]; then
            if [[ "${{ matrix.platform.target }}" == "aarch64-unknown-linux-musl" ]]; then
              PLATFORM="linux/arm64"
              IMAGE="rust:1.82-alpine"
            else
              PLATFORM="linux/amd64"
              IMAGE="rust:1.82-alpine"
            fi
            DEPS="pkgconf-dev openssl-dev openssl-libs-static musl-dev gcc"
            TARGET_FLAG="--target ${{ matrix.platform.target }}"
          else
            echo "Unsupported Docker target: ${{ matrix.platform.target }}"
            exit 1
          fi

          docker run --rm \
            --platform $PLATFORM \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            -e OPENSSL_STATIC=1 \
            -e OPENSSL_LIB_DIR=/usr/lib \
            -e OPENSSL_INCLUDE_DIR=/usr/include \
            $IMAGE \
            sh -c "
              if command -v apk >/dev/null 2>&1; then
                apk add --no-cache $DEPS
              else
                apt-get update && apt-get install -y $DEPS
              fi && \
              cargo build --locked --release --bin vx $TARGET_FLAG
            "

      # Build executable (native compilation)
      - name: Build executable (native)
        if: matrix.platform.use_docker != true
        uses: houseabsolute/actions-rust-cross@v1
        with:
          command: build
          target: ${{ matrix.platform.target }}
          args: "--locked --release --bin vx"
          strip: true

      # Code signing for Windows executables using SignPath.io
      # TODO: Re-enable when SignPath secrets are properly configured
      # - name: Sign Windows executable
      #   if: contains(matrix.platform.target, 'windows')
      #   uses: signpath/github-action-submit-signing-request@v1
      #   with:
      #     api-token: ${{ secrets.SIGNPATH_API_TOKEN }}
      #     organization-id: ${{ secrets.SIGNPATH_ORGANIZATION_ID }}
      #     project-slug: 'vx'
      #     signing-policy-slug: 'release-signing'
      #     github-artifact-id: ${{ steps.build.outputs.artifact-id }}
      #     wait-for-completion: true
      #     output-artifact-directory: 'signed-artifacts'

      - name: Publish artifacts and release
        uses: houseabsolute/actions-rust-release@v0
        with:
          executable-name: vx
          target: ${{ matrix.platform.target }}
          changes-file: ""  # Disable default changelog file
          action-gh-release-parameters: |
            {
              "body": "${{ steps.changelog_reader.outputs.changes }}",
              "prerelease": false,
              "draft": false
            }
          extra-files: |
            README.md
            README_zh.md
            LICENSE


